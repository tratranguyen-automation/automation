webdriver {
  driver = chrome
  use.driver.service.pool = false
}
headless.mode = false

#
# Chrome options can be defined using the chrome.switches property
#
chrome.switches = """--start-maximized;--test-type;--no-sandbox;--ignore-certificate-errors;
                   --disable-popup-blocking;--disable-default-apps;--disable-extensions-file-access-check;
                   --disable-infobars,--disable-gpu"""
#

#Define drivers for different platforms. Serenity will automatically pick the correct driver for the current platform
#
drivers {
  windows {
    webdriver.chrome.driver = "src/test/resources/webdriver/window/chromedriver.exe"
    webdriver.gecko.driver = "src/test/resources/webdriver/window/geckodriver.exe"
  }
  mac {
    webdriver.chrome.driver = "src/test/resources/webdriver/mac/chromedriver"
    webdriver.gecko.driver = "src/test/resources/webdriver/mac/geckodriver"
  }
  linux {
    webdriver.chrome.driver = "src/test/resources/webdriver/linux/chromedriver"
    webdriver.gecko.driver = "src/test/resources/webdriver/linux/geckodriver"
  }
  timeouts {
    implicitlywait = 10000
    fluentwait = 10000
  }
}

#
# This section defines environment-specific configuration for different environments.
# You can define normal Serenity properties, such as webdriver.base.url, or custom ones
# You can find more details about this feature at https://johnfergusonsmart.com/environment-specific-configuration-in-serenity-bdd/
#
environments{
    am_campaigns_newtab_skin{
        webdriver.base.url = "https://testing.qc.coccoc.com"
        support.name = "gurusupport@testing.qc"
        support.pwd = "abc123"
    }
}